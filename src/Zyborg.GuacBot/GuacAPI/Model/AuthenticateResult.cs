using System.Collections.Generic;
using System.Globalization;
using System.Linq;
using System.Text.Json;
using System.Text.Json.Serialization;
using AngleSharp.Common;

// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType;
//
//    var welcome = Welcome.FromJson(jsonString);

namespace Zyborg.GuacBot.GuacAPI.Model
{
    public partial class AuthenticateResult
    {
        [JsonPropertyName("message")]
        public string Message { get; set; }

        [JsonPropertyName("translatableMessage")]
        public TranslatableMessage TranslatableMessage { get; set; }

        [JsonPropertyName("statusCode")]
        public object StatusCode { get; set; }

        [JsonPropertyName("expected")]
        public Expected[] Expected { get; set; }

        [JsonPropertyName("type")]
        public string Type { get; set; }


        [JsonPropertyName("authToken")]
        public string AuthToken { get; set; }

        [JsonPropertyName("username")]
        public string Username { get; set; }

        [JsonPropertyName("dataSource")]
        public string DataSource { get; set; }

        [JsonPropertyName("availableDataSources")]
        public string[] AvailableDataSources { get; set; }
    }

    public partial class Expected
    {
        [JsonPropertyName("name")]
        public string Name { get; set; }

        [JsonPropertyName("type")]
        public string Type { get; set; }

        // [JsonPropertyName("signedRequest")]
        // public string SignedRequest { get; set; }

        // [JsonPropertyName("apiHost")]
        // public string ApiHost { get; set; }

        [JsonExtensionData]
        public Dictionary<string, JsonElement> AuthArgs { get; set; }

        public Dictionary<string, object> GetAuthArgsAsStrings() => AuthArgs.ToDictionary(
            kv => kv.Key, kv => (object)kv.Value.GetString());
    }

    public partial class TranslatableMessage
    {
        [JsonPropertyName("key")]
        public string Key { get; set; }

        [JsonPropertyName("variables")]
        public object Variables { get; set; }
    }
}
